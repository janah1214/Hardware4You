@page "/login"

@using Hardware4You.Data
@using MudBlazor
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavManager

<h3>Login</h3>

<div class="container page">
    <div class="row">
        <div class="col-md-6 offset-md-3 col-xs-12">
            <EditForm Model="@loginCommand">
                <FluentValidationValidator />

                <fieldset class="mt-3 form-group">
                    <div>
                        <MudTextField class="form-control form-control-lg" InputType="InputType.Email"
                            @bind-Value="loginCommand.Email" Label="Email"
                            For="@(() => loginCommand.Email)"
                            Variant="Variant.Outlined"></MudTextField>
                    </div>
                </fieldset>
                <fieldset class="mt-2 form-group">
                    <div>
                        <MudTextField InputType="@TxtType" class="form-control form-control-lg"
                            @bind-Value="loginCommand.Password" Label="Passwort"
                            For="@(() => loginCommand.Password)"
                            Variant="Variant.Outlined"></MudTextField>
                    </div>
                    <span>
                        <MudCheckBox @bind-Checked="@showPassword" Color="Color.Primary" @onclick="ShowPassword" />Passwort anzeigen
                    </span>
                </fieldset>
                <MudButton class="mt-3 btn btn-lg btn-primary pull-xs-right"
                    Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Login"
                    Color="Color.Primary" ButtonType="MudBlazor.ButtonType.Submit">
                        Login
                </MudButton>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private Data.Login loginCommand = new();
    public MudBlazor.InputType TxtType = InputType.Password;
    public bool showPassword { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        var authstate = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authstate.User;
        if (user.Identity.IsAuthenticated)
        {
            NavManager.NavigateTo("/");
        }
    }

    public void ShowPassword() 
    {
        if(showPassword == false)
        {
            TxtType = InputType.Text;
        }
        else
        {
            TxtType = InputType.Password;
        }
    }
}

<style>
    .e-input-eye:before {
        content: '\e345';
        font-family: e-icons;
        font-size: 13px;
    }
</style>
